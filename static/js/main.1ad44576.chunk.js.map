{"version":3,"sources":["assets/Profile.png","assets/Ambulance.png","components/header/headerComponent.jsx","components/sideContent/SideContentComponent.jsx","components/patientForm/patientFormComponent.jsx","components/content/contentComponent.jsx","components/Table/TableComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","state","clicked","handleIconClick","setState","className","onClick","this","key","href","src","ProfileImage","alt","React","Component","SideContent","image","PatientForm","patientName","patientAge","Case","priorityLevel","contact","change","submit","onSubmit","type","value","placeholder","name","onChange","required","style","fontSize","Content","AmbulanceImage","Table","patients","map","patient","index","App","props","handleInputChange","event","target","handleSubmit","preventDefault","patientsArray","push","console","log","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1ad44576.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Profile.3d9a511a.png\";","module.exports = __webpack_public_path__ + \"static/media/Ambulance.c287d469.png\";","import React from \"react\";\r\nimport \"./header.styles.css\";\r\nimport ProfileImage from \"../../assets/Profile.png\";\r\nimport { GiHamburgerMenu } from \"react-icons/gi\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nclass Header extends React.Component {\r\n  state = {\r\n    clicked: false,\r\n  };\r\n\r\n  handleIconClick = () => {\r\n    this.setState({\r\n      clicked: !this.state.clicked,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"Header\">\r\n        <nav className=\"navbar\">\r\n          <div className=\"headerTitleWrapper\">\r\n            <p className=\"title\">Priority Pulse</p>\r\n          </div>\r\n          <div className=\"burger\" onClick={this.handleIconClick}>\r\n            {this.state.clicked ? <FaTimes /> : <GiHamburgerMenu />}\r\n          </div>\r\n          <ul className={this.state.clicked ? \"navMenu active\" : \"navMenu\"}>\r\n            <li className=\"navListItem Home\" key=\"1\">\r\n              <a href=\"/home\">Home</a>\r\n            </li>\r\n            <li className=\"navListItem\" key=\"2\">\r\n              <a href=\"/activerides\">Active Rides</a>\r\n            </li>\r\n            <li className=\"navListItem\" key=\"3\">\r\n              <a href=\"/profile\">Profile</a>\r\n            </li>\r\n            <li className=\"navListItem\" key=\"4\">\r\n              <a href=\"/logout\">Logout</a>\r\n            </li>\r\n            <li className=\"navListItem\" key=\"5\">\r\n              <img\r\n                src={ProfileImage}\r\n                className=\"ProfileImage\"\r\n                alt=\"profileImage\"\r\n              />\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./SideContent.styles.css\";\r\n\r\nconst SideContent = ({ image }) => (\r\n  <div className=\"SideContentWrapper\">\r\n    <div>\r\n      <img src={image} alt=\"Ambulance\" className=\"ambulanceImage\" />\r\n    </div>\r\n    <div>\r\n      <p className=\"sideData\">\r\n        An Issue that is never-ending in our country is the traffic\r\n        <br />\r\n        The Core problem with traffic arises when an ambulance tries to cross\r\n        over <br />\r\n        Our Team Priority Pulse is reaching out to this issue with a\r\n        Priority-based solution\r\n      </p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default SideContent;\r\n","import React from \"react\";\r\nimport \"./patientForm.styles.css\";\r\n\r\nconst PatientForm = ({\r\n  patientName,\r\n  patientAge,\r\n  Case,\r\n  priorityLevel,\r\n  contact,\r\n  change,\r\n  submit,\r\n}) => (\r\n  <div className=\"PatientFormWrapper\">\r\n    <form className=\"patientForm\" onSubmit={submit}>\r\n      <p className=\"formTitle\">Patient Details</p>\r\n      <p className=\"fillDetails\">Fill the Details Below</p>\r\n\r\n      <input\r\n        type=\"text\"\r\n        className=\"patientName inputTag\"\r\n        value={patientName}\r\n        placeholder=\"Patient Name\"\r\n        name=\"patientName\"\r\n        onChange={change}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        className=\"inputTag\"\r\n        value={patientAge}\r\n        placeholder=\"Patient Age\"\r\n        name=\"patientAge\"\r\n        onChange={change}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        className=\"inputTag\"\r\n        value={Case}\r\n        name=\"Case\"\r\n        placeholder=\"Case\"\r\n        onChange={change}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        className=\"inputTag\"\r\n        value={priorityLevel}\r\n        name=\"priorityLevel\"\r\n        placeholder=\"Priority Level\"\r\n        onChange={change}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        className=\"inputTag\"\r\n        value={contact}\r\n        name=\"contact\"\r\n        placeholder=\"Contact\"\r\n        onChange={change}\r\n        required\r\n      />\r\n      <button className=\"submitBtn\">Submit</button>\r\n      <p style={{ fontSize: \"16px\" }}>Getting problem in submitting</p>\r\n      <input type=\"submit\" className=\"trackPatientBtn\" value=\"Track Patient\" />\r\n    </form>\r\n  </div>\r\n);\r\n\r\nexport default PatientForm;\r\n","import React from \"react\";\r\nimport \"./content.styles.css\";\r\nimport AmbulanceImage from \"../../assets/Ambulance.png\";\r\nimport SideContent from \"../sideContent/SideContentComponent\";\r\nimport PatientForm from \"../patientForm/patientFormComponent\";\r\n\r\nconst Content = ({\r\n  patientName,\r\n  patientAge,\r\n  Case,\r\n  priorityLevel,\r\n  contact,\r\n  change,\r\n  submit,\r\n}) => (\r\n  <div className=\"Content\">\r\n    <div className=\"sideContent\">\r\n      <SideContent image={AmbulanceImage} />\r\n    </div>\r\n    <div className=\"formContent\">\r\n      <PatientForm\r\n        patientName={patientName}\r\n        patientAge={patientAge}\r\n        Case={Case}\r\n        priorityLevel={priorityLevel}\r\n        contact={contact}\r\n        change={change}\r\n        submit={submit}\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport \"./Table.styles.css\";\r\n\r\nconst Table = ({ patients }) => (\r\n  <div className=\"Table\">\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>S.No</th>\r\n          <th>Patient Name</th>\r\n          <th>Patient Age</th>\r\n          <th>Case</th>\r\n          <th>Contact</th>\r\n          <th>Priority Level</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {patients.map((patient, index) => (\r\n          <tr key={index}>\r\n            <td>{index + 1}</td>\r\n            <td>{patient.patientName}</td>\r\n            <td>{patient.patientAge}</td>\r\n            <td>{patient.Case}</td>\r\n            <td>{patient.contact}</td>\r\n            <td>{patient.priorityLevel}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n);\r\n\r\nexport default Table;\r\n\r\n// <tr>\r\n// <td>1</td>\r\n// <td>Nithish</td>\r\n// <td>38</td>\r\n// <td>Accident</td>\r\n// <td>9343483932</td>\r\n// <td>4</td>\r\n// </tr>\r\n// <tr>\r\n// <td>2</td>\r\n// <td>Kiran</td>\r\n// <td>42</td>\r\n// <td>High BP</td>\r\n// <td>9808390438</td>\r\n// <td>5</td>\r\n// </tr>\r\n// <tr>\r\n// <td>2</td>\r\n// <td>Kiran</td>\r\n// <td>42</td>\r\n// <td>High BP</td>\r\n// <td>9808390438</td>\r\n// <td>5</td>\r\n// </tr>\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/header/headerComponent\";\nimport Content from \"./components/content/contentComponent\";\nimport Table from \"./components/Table/TableComponent\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patients: [],\n      patientName: \"\",\n      patientAge: \"\",\n      Case: \"\",\n      priorityLevel: \"\",\n      contact: \"\",\n    };\n  }\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n    // console.log(event.target.value);\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    // console.log(\"Clicked\");\n    const {\n      patientName,\n      patientAge,\n      Case,\n      priorityLevel,\n      contact,\n    } = this.state;\n\n    let patientsArray = [...this.state.patients];\n\n    patientsArray.push({\n      patientName,\n      patientAge,\n      Case,\n      priorityLevel,\n      contact,\n    });\n\n    this.setState({\n      patientName: \"\",\n      patientAge: \"\",\n      Case: \"\",\n      priorityLevel: \"\",\n      contact: \"\",\n      patients: patientsArray,\n    });\n    console.log(patientsArray);\n  };\n  render() {\n    const {\n      patientName,\n      patientAge,\n      Case,\n      priorityLevel,\n      contact,\n      patients,\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <Header />\n        <Content\n          patientName={patientName}\n          patientAge={patientAge}\n          Case={Case}\n          priorityLevel={priorityLevel}\n          contact={contact}\n          change={(event) => this.handleInputChange(event)}\n          submit={(event) => this.handleSubmit(event)}\n        />\n        <Table patients={patients} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}